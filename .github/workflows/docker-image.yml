name: Check Docker Hub Tags, Build and Push

on:
  schedule:
    - cron: '0 2,14 * * *'  # Runs daily at 2 AM and 2 PM
  workflow_dispatch:  # Allows manual triggering

jobs:
  check-tags:
    runs-on: ubuntu-latest
    outputs:
      build_28_apache: ${{ steps.check_tags.outputs.BUILD_28_APACHE }}
      build_27_apache: ${{ steps.check_tags.outputs.BUILD_27_APACHE }}
      build_26_apache: ${{ steps.check_tags.outputs.BUILD_26_APACHE }}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Fetch all branches

    - name: Check Docker Hub for tag updates
      id: check_tags
      run: |
        # Define Docker Hub repository details
        REPO="library/nextcloud"
        
        # Fetch the latest tags from Docker Hub
        curl -s "https://hub.docker.com/v2/namespaces/library/repositories/nextcloud/tags?page_size=100" -o tags.json

        # Define the current date and 3 days ago date
        CURRENT_DATE=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
        DATE_3_DAYS_AGO=$(date -u -d '3 days ago' +"%Y-%m-%dT%H:%M:%SZ")

        # Extract last updated dates for tags
        LAST_UPDATE_28_APACHE=$(jq -r '.results[] | select(.name=="28-apache" and .architecture=="amd64") | .last_updated' tags.json)
        LAST_UPDATE_27_APACHE=$(jq -r '.results[] | select(.name=="27-apache" and .architecture=="amd64") | .last_updated' tags.json)
        LAST_UPDATE_26_APACHE=$(jq -r '.results[] | select(.name=="26-apache" and .architecture=="amd64") | .last_updated' tags.json)

        # Determine if the tags were updated in the last 3 days
        BUILD_28_APACHE=$(test "$(date -d "$LAST_UPDATE_28_APACHE" +%s)" -gt "$(date -d "$DATE_3_DAYS_AGO" +%s)" && echo "true" || echo "false")
        BUILD_27_APACHE=$(test "$(date -d "$LAST_UPDATE_27_APACHE" +%s)" -gt "$(date -d "$DATE_3_DAYS_AGO" +%s)" && echo "true" || echo "false")
        BUILD_26_APACHE=$(test "$(date -d "$LAST_UPDATE_26_APACHE" +%s)" -gt "$(date -d "$DATE_3_DAYS_AGO" +%s)" && echo "true" || echo "false")

        # Set outputs to control build jobs
        echo "::set-output name=BUILD_28_APACHE::$BUILD_28_APACHE"
        echo "::set-output name=BUILD_27_APACHE::$BUILD_27_APACHE"
        echo "::set-output name=BUILD_26_APACHE::$BUILD_26_APACHE"

  build-master:
    needs: check-tags  # This job depends on the check-tags job to complete
    if: needs.check-tags.outputs.build_28_apache == 'true'
    runs-on: ubuntu-latest
    steps:
    - name: Checkout master branch
      uses: actions/checkout@v4
      with:
        ref: master

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and Push Docker Image for master branch
      run: |
        docker buildx build --push -t cardonaje/nextcloud:28-apache .
        docker buildx build --push -t cardonaje/nextcloud:latest .

  build-nextcloud27:
    needs: check-tags
    if: needs.check-tags.outputs.build_27_apache == 'true'
    runs-on: ubuntu-latest
    steps:
    - name: Checkout nextcloud27 branch
      uses: actions/checkout@v4
      with:
        ref: nextcloud27

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and Push Docker Image for nextcloud27 branch
      run: |
        docker buildx build --push -t cardonaje/nextcloud:27-apache .

  build-nextcloud26:
    needs: check-tags
    if: needs.check-tags.outputs.build_26_apache == 'true'
    runs-on: ubuntu-latest
    steps:
    - name: Checkout nextcloud26 branch
      uses: actions/checkout@v4
      with:
        ref: nextcloud26

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and Push Docker Image for nextcloud26 branch
      run: |
        docker buildx build --push -t cardonaje/nextcloud:26-apache .
